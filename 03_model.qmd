---
title: "3. Model"
format: html
---

Import packages:
```{r}
library(here)
library(tidyr)
library(dplyr)
library(rlang)
library(glue)
library(brms)
library(projpred)
library(purrr)
library(parallel)
```

Import data:
```{r}
data = readRDS(here("data", "data_processed.csv"))
pron_order = c("Jun", "Qing", "Gong", "RuEr")
data = data %>% mutate(PronTypeSimple = factor(PronTypeSimple, levels = pron_order))
```

# Priors

Setting the priors for coefficients:
```{r}
set_prior_pronpredict = function(response_cats, var){
    purrr::reduce(
        lapply(response_cats,
            function(x){
                set_prior(glue("normal(0, {var})"),
                    class = "b",
                    dpar = glue("mu{x}"))
            }
        ),
        c)
}

model_brm_priors = set_prior_pronpredict(pron_order[-1], 4)

```

# Running models

Function to create models:
```{r}
num_cores = parallel::detectCores(logical = FALSE) - 2L
get_model_pronpredict = function(formula, chains = 4L, iter = 2000L, cores = 1L){
    brm(formula,
        data = data,
        family = categorical(link = "logit"),
        chains = chains,
        iter = iter,
        prior = model_brm_priors,
        cores = getOption("mc.cores", min(cores, chains)))
}
```

Simple trial model to ensure everything works correctly:
```{r}
model_test = get_model_pronpredict(
    bf(PronTypeSimple ~ Power),
    chains = 2L, iter = 1000L,
    cores = num_cores)
```


Full model
```{r}
model_full = get_model_pronpredict(
    bf(PronTypeSimple ~ Power * Intimate + Power * StanceH + Intimate * StanceH + StanceS + Kin + ImpositionH + (1 | Speaker)),
    cores = num_cores
)
```

```{r}
```

```{r}
model3_summ = summary(model3)
model3_fix = fixef(model3, probs = c(0.05, 0.95)) %>% data.frame
model3_fix = model3_fix %>% mutate(Coef = rownames(model3_fix))
write_csv(model3_fix, "model3fix.csv")

model4_summ = summary(model4)
model4_fix = fixef(model4, probs = c(0.05, 0.95)) %>% data.frame
model4_fix = model4_fix %>% mutate(Coef = rownames(model4_fix))
write_csv(model4_fix, "model4fix.csv")

model3_re = brm(bf(y | trials(trials) ~ Power * Intimate * StanceH  + Kin + (1 | Speaker) ), data = data, family = multinomial(link = "logit"), chains = 1)
model3_re = brm(bf(y | trials(trials) ~ Power * Intimate * StanceH  + Kin + (1 | Speaker) ), data = data, family = multinomial(link = "logit"), prior = set_prior("normal(0,5)"), cores = getOption("mc.cores", 4L))
model3_re_fix = fixef(model3_re, probs = c(0.05, 0.95)) %>% data.frame
model3_re_fix = model3_re_fix %>% mutate(Coef = rownames(model3_re_fix))
model3_re_rand = coef(model3_re, probs = c(0.05, 0.95)) %>% data.frame
model3_re_rand = model3_re_rand %>% mutate(Coef = rownames(model3_re_rand))

model3_re_fix_80 = fixef(model3_re, probs = c(0.1, 0.9)) %>% data.frame
model3_re_fix_80 = model3_re_fix_80 %>% mutate(Coef = rownames(model3_re_fix_80))
model3_re_rand_80 = coef(model3_re, probs = c(0.1, 0.90)) %>% data.frame
model3_re_rand_80 = model3_re_rand %>% mutate(Coef = rownames(model3_re_rand))

cbind(levels(data$Speaker), model3_re_rand_80[,c(1,5,9,13)]) %>% View
write_csv(model3_re_fix, "model3refix.csv")
write_csv(model3_re_rand, "model3rerand.csv")
write_csv(model3_re_fix_80, "model3refix_80.csv")
write_csv(model3_re_rand_80, "model3rerand_80.csv") 

model6_re_fix_80 = fixef(model6_re, probs = c(0.1, 0.9)) %>% data.frame
model6_re_fix_80 = model6_re_fix_80 %>% mutate(Coef = rownames(model6_re_fix_80))
```

# Posterior predictive checks
